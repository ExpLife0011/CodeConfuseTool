{
 "0":"{\n\tstruct CacheStyle {volatile int a;int (*func)(void);};struct CacheStyle cs;cs.a = 30;cs.func = rand;srand((unsigned)clock());if(cs.func() % 200+cs.a > (cs.func() % 100 + 230)) {int r[20+1]; r[0]=0; int p[20]; int s,d,k,n; for(int j=0;j<20;j++) { int q=200; for(int i=0;i<=j;i++) { q = q > (p[i]+r[j-i]) ? q : (p[i]+r[j-i]); } r[j+1]=q; } s=0;k=n; while(k>9) { while(k!=0) { d=k%10; s+=d; k/=10; } k=s; s=0; }}"
 ,
 "1":"{\n\tstruct CacheStyle {volatile int a;int (*func)(void);};struct CacheStyle cs;cs.a = 30;cs.func = rand;srand((unsigned)clock());if (cs.func() % 150+cs.a*2 > (cs.func() % 100 + 210)) {struct gen{ int info; float suitability;};int i , j , m;float x;float gmp;float mp = 0.04;int gentinfo;float gentsuitability;int sum_of_all = 200;gmp = 1 - (1 - mp) * 11;struct gen gen_group[sum_of_all];for(i = 0 ; i < sum_of_all ; i++){ srand((unsigned)clock()); if(rand() * gmp >= 15.2) { j = rand() % 14; m = 1 << j; gen_group[i].info = gen_group[i].info^m; x = gen_group[i].info; gen_group[i].suitability = x*(x*(x*(x*(x*(x-10)-26)+344)+193)-1846)-1680; }}for(i = 0 ; i < sum_of_all - 1 ; i++){ for(j = i + 1 ; j < sum_of_all ; j++) { if(gen_group[i].suitability > gen_group[j].suitability) { gentinfo = gen_group[i].info; gen_group[i].info = gen_group[j].info; gen_group[j].info = gentinfo; gentsuitability = gen_group[i].suitability; gen_group[i].suitability = gen_group[j].suitability; gen_group[j].suitability = gentsuitability; } }}}"
 ,
 "2":"{\n\tstruct CacheStyle {volatile int a;int (*func)(void);};struct CacheStyle cs;cs.a = 30;cs.func = rand;srand((unsigned)clock());if(cs.func() % 100+cs.a*6+100 < (cs.func() % 100 + 20)) {struct gen { int info; float suitability; }; int i , j , k; int sum_of_all = 20; j = 0; i = sum_of_all/2-1; struct gen gen_group[sum_of_all]; struct gen gen_new[sum_of_all]; if(gen_group[i].suitability < gen_new[i].suitability) { for(j = 1 ; j < sum_of_all / 2 ; j++) { if(gen_group[i+j].suitability > gen_new[i-j].suitability) break; } } else { if(gen_group[i].suitability>gen_new[i].suitability) { for(j=-1;j>-sum_of_all/2;j--) { if(gen_group[i+j].suitability<=gen_new[i-j].suitability) break; } } } for(k=j;k<sum_of_all/2+1;k++) { gen_group[i+k].info = gen_new[i-k].info; gen_group[i+k].suitability = gen_new[i-k].suitability; }}"
 ,
 "3":"{\n\tstruct CacheStyle {volatile int a;int (*func)(void);};struct CacheStyle cs;cs.a = 30;cs.func = rand;srand((unsigned)clock());if(cs.func() % 300+cs.a*5.3 > (cs.func() % 100 + 636)) {const int man_arr_size = 20; const int maxNumber = 3; int man[man_arr_size] = {0}; int count = 1; int i = 0, pos = -1; int alive = 5; while(count <= man_arr_size) { do { pos = (pos+1) % man_arr_size; if(man[pos] == 0) i++; if(i == maxNumber) { i = 0; break; } } while(1); man[pos] = count; count++; } srand((unsigned)clock()); for(i = 0; i < man_arr_size; i++) { man[i] = rand() % (man_arr_size+maxNumber); } for(i = 0; i < man_arr_size; i++) { if(man[i] > alive) { alive *= man[i]; } else { alive += man[i]; } if((i+1) % 5 == 0) { alive = man[i] % (i*3-2); } }}"
 ,
 "4":"{\n\tstruct Item { int weight; int profit; }; struct CacheStyle {volatile int a;int (*func)(void);};struct CacheStyle cs;cs.a = 30;cs.func = rand;srand((unsigned)clock());if(cs.func() % 300+cs.a*5.3 > (cs.func() % 100 + 636)) {struct Item itemArray[30]; int capacity = 20; float maxProfit=0; int i=30; while(capacity>0 && --i>=0) { if(capacity>=itemArray[i].weight) { maxProfit+=itemArray[i].profit; capacity-=itemArray[i].weight; } else { float profitPerUnit = (float)(itemArray[i]).profit/(float)(itemArray[i]).weight; maxProfit+=profitPerUnit*capacity; capacity=0; break; } }}"
 ,
 "5":"{\n\tstruct CacheStyle {volatile int a;int (*func)(void);};struct CacheStyle cs;cs.a = 30;cs.func = rand;srand((unsigned)clock());if(cs.func() % 300+cs.a*5.3 > (cs.func() % 100 + 636)) {int a[20]; int n = 30; int lis[15]; for (int i = 0; i < n; ++i) { lis[i] = 1; } for (int i = 0; i < n; ++i) { for (int j = 0; j < i; ++j) { if(a[i]>a[j] && lis[i]<lis[j]+1) lis[i] = lis[j] + 1; } } int res = 0; for (int i = 0; i < n; ++i) { res = res > lis[i] ? res : lis[i]; }}"
 ,
 "6":"{\n\tstruct CacheStyle {volatile int a;int (*func)(void);};struct CacheStyle cs;cs.a = 30;cs.func = rand;srand((unsigned)clock());if(cs.func() % 300+cs.a*5.3 > (cs.func() % 100 + 636)) {int mat_size=20,i,j,step; double mat[mat_size+1][mat_size+1], x[mat_size][mat_size+1]; for(i=0;i<mat_size;i++) { for(j=0;j<=mat_size;j++) { mat[i][j] = random()%365;} } for(step=0;step<mat_size-1;step++){ for(i=step;i<mat_size-1;i++) { double a = (mat[i+1][step]/mat[step][step]); for(j=step;j<=mat_size;j++) mat[i+1][j] = mat[i+1][j] - (a * mat[step][j]); } } for(i=0;i<mat_size;i++) { for(j=0;j<=mat_size;j++) { x[i][j] = mat[i][j]; } } for(i=mat_size-1;i>=0;i--) { double sum = 0; for(j=mat_size-1;j>i;j--) { x[i][j] = x[j][j] * x[i][j]; sum = x[i][j] + sum; } if(x[i][i]==0) x[i][i] = 0; else x[i][i] = (x[i][mat_size] - sum)/(x[i][i]); }}"
 ,
 "7":"{\n\tstruct CacheStyle {volatile int a;int (*func)(void);};struct CacheStyle cs;cs.a = 30;cs.func = rand;srand((unsigned)clock());if(cs.func() % 300+cs.a*5.3 > (cs.func() % 100 + 636)) {int i, j; int n = 10; int a[n][n]; int b[n][n]; for (i = 0; i < n; i++) { srand((unsigned)clock()); for (j = 0; j <n ; j++) { a[i][j] = rand() % 3000; } } for (i = 0; i < n; i++) { srand((unsigned)clock()); for (j = 0; j <n ; j++) { b[i][j] = rand() % 2000; } } if (n==2) { int p1= (a[0][0] + a[1][1])*(b[0][0]+b[1][1]); int p2= (a[1][0]+a[1][1])*b[0][0]; int p3= a[0][0]*(b[0][1]-b[1][1]); int p4= a[1][1]*(b[1][0]-b[0][0]); int p5= (a[0][0]+a[0][1])*b[1][1]; int p6= (a[1][0]-a[0][0])*(b[0][0]+b[0][1]); int p7= (a[0][1]-a[1][1])*(b[1][0]+b[1][1]); int c[n][n]; c[0][0]=p1+p4-p5+p7; c[0][1]=p3+p5; c[1][0]=p2+p4; c[1][1]=p1-p2+p3+p6; }}"
}
